#Cargamos las librerias
library("arules")
# Cargar los datos
column_names <- c("citrus fruit", "semi-finished bread", "margarine", "ready soups")
transacciones <- read.transactions("./datos/groceries.csv", sep = ";", format = "single", header = TRUE, cols = column_names)
# Cargar los datos
transacciones <- read.transactions("./datos/groceries.csv", sep = ";", format = "single", header = FALSE)
# Cargar los datos
transacciones <- read.transactions("./datos/groceries.csv", sep = ";", format = "single", header = FALSE, cols = NULL)
# Cargar los datos
transacciones <- read.transactions("./datos/groceries.csv", sep = ",", format = "single", header = FALSE, cols = NULL)
# Cargar los datos
transacciones <- read.transactions("./datos/groceries.csv", sep = ",", format = "basquet", header = FALSE, cols = NULL)
# Cargar los datos
transacciones <- read.transactions("./datos/groceries.csv", sep = ",", format = "basket", header = FALSE, cols = NULL)
# Explorar los datos
summary(transacciones)
str(transacciones)
head(transacciones)
inspect(transacciones)
length(transacciones)
items_freq <- itemFrequency(groceries)
boxplot(items_freq)
items_freq <- itemFrequency(transacciones)
boxplot(items_freq)
median(items_freq)
#hallo los itemsets frecuentes:
soporte <- median(items_freq)
itemsets_frec <- apriori(transacciones,
parameter = list(support = soporte,
target = "frequent itemsets"),
control = list(verbose=F))
inspect(itemsets_frec)
# Encontramos itemsets frecuentes
inspect(transacciones[1:5])
size(transacciones)
# Vemos los 5 itemsets frecuentes de mayor soporte
itemsets <- sort(itemsets_frec, by = "support", decreasing = TRUE)
inspect(itemsets)
confianza05 <- 0.5
reglas <- apriori(transacciones,
parameter = list(support = soporte,
confidence = confianza05,
target = "rules"),
control = list(verbose = F))
reglas05
reglas05 <- apriori(transacciones,
parameter = list(support = soporte,
confidence = confianza05,
target = "rules"),
control = list(verbose = F))
reglas05
# Ordenamos las reglas por confianza y las mostramos
inspect(sort(reglas05, decreasing = TRUE, by = "confidence"))
#
size(reglas05)
#--------
confianza025 <- 0.25
reglas025 <- apriori(transacciones,
parameter = list(support = soporte,
confidence = confianza025,
target = "rules"),
control = list(verbose = F))
reglas025
# Ordenamos las reglas por confianza y las mostramos
inspect(sort(reglas025, decreasing = TRUE, by = "confidence"))
# Ordenamos las reglas por confianza y las mostramos
inspect(sort(reglas025, decreasing = TRUE, by = "confidence"))
#
size(reglas025)
#veo reglas ordenadas por lift:
inspect(sort(reglas025, decreasing=TRUE, by= "lift"))
#punto 1:
reglas025.lift <- subset(reglas025, sebset = lift >2)
reglas025.lift
#punto 1:
reglas025.lift <- subset(reglas025, subset = lift > 2)
reglas025.lift
#veo ordenadas por lift:
inspect(sort(reglas025.lift, decreasing=TRUE, by= "lift"))
#- las reglas que contienen el elemento “other vegetables” en el consecuente con un lift mayor a 2;
reglas025.veglift <- subset(reglas025, subset=rhs%in%c("other vegetables") & lift>2)
reglas025.veglift
#veo ordenadas por lift:
inspect(sort(reglas025.veglift, decreasing=TRUE, by= "lift"))
#- las reglas que contienen solamente “other vegetables" y "yogurt” en el antecedente y un lift mayor a 2;
reglas025.veg_yog_lift <- subset(reglas025.lift, subset=lhs%oin%c("other vegetables", "yogurt") & lift>2)
reglas025.veg_yog_lift #
#veo ordenadas por lift:
inspect(sort(reglas025.veg_yog_lift, decreasing=TRUE, by= "lift"))
#- las reglas que contienen “other vegetables" o "yogurt” en el consecuente y un lift mayor a 2.
reglas025.veg_o_yog_lift <- subset(reglas025.lift, subset=rhs%oin%c("other vegetables", "yogurt") & lift>2)
reglas025.veg_o_yog_lift
#veo ordenadas por lift:
inspect(sort(reglas025.veg_o_yog_lift, decreasing=TRUE, by= "lift"))
# Cargar los datos
column_names <- c("order_id", "product_name")
transacciones_orders <- read.transactions("./datos/orders.csv", sep = ";", format = "single", header = TRUE, cols = column_names)
itemsets <- eclat(transacciones_orders, parameter = list(supp = 0.1, maxlen = 3))
itemsets
itemsets <- eclat(transacciones_orders, parameter = list(supp = 0.1, minlen = 3))
itemsets
itemsets <- eclat(transacciones_orders, parameter = list(supp = 0.001, minlen = 3))
itemsets
## Create rules from the frequent itemsets
rules <- ruleInduction(itemsets, confidence = 0.7)
rules
## Create rules from the frequent itemsets
rules <- ruleInduction(itemsets, transacciones_orders, confidence = 0.7)
rules
#veo ordenadas por lift:
inspect(sort(rules, decreasing=TRUE, by= "lift"))
confianza <- 0.7
reglas_apriori <- apriori(transacciones_orders,
parameter = list(support = soporte,
confidence = confianza,
target = "rules"),
control = list(verbose = F))
reglas_apriori
reglas_apriori <- apriori(transacciones_orders,
parameter = list(support = 0.001,
confidence = 0.7,
target = "rules"),
control = list(verbose = F))
reglas_apriori
# Ordenamos las reglas por confianza y las mostramos
inspect(sort(reglas_apriori, decreasing = TRUE, by = "confidence"))
#
size(reglas_apriori)
reglas_apriori <- apriori(transacciones_orders,
parameter = list(support = 0.001,
confidence = 0.7,
target = "rules",
minlen = 3),
control = list(verbose = F))
reglas_apriori #set of 9 rules
# Ordenamos las reglas por confianza y las mostramos
inspect(sort(reglas_apriori, decreasing = TRUE, by = "confidence"))
#
size(reglas_apriori)
interestMeasure(rules, measure = c("lift", "coverage", "fishersExactTest"))
interestMeasure(reglas_apriori, measure = c("lift", "coverage", "fishersExactTest"))
